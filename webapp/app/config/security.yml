jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        AcsilServer\AppBundle\Entity\User: #sha512
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        user_db:
          entity: { class: AcsilServerAppBundle:User }
        user_provider:
          id: platform.user.provider


    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

        api:
            pattern:    ^/service
            fos_oauth:  true
            stateless:  true
            anonymous:  false

        secured_area:
            pattern:    ^/
            form_login:
                login_path: /login
                check_path: /login_check
            logout:
                path:   _logout
                target: /
                invalidate_session: false
            http_basic: ~
            anonymous: ~
            switch_user: true
            #http_basic:
            #    realm: "Secured Demo Area"

        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            form_login:
                login_path: /oauth/v2/auth_login
                check_path: /oauth/v2/auth_login_check

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/request, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/acsil, roles: ROLE_ADMIN }
        - { path: ^/service, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }

    acl:
        connection: default
